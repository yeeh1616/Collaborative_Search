"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireWildcard(require("react"));

var _ChatWindow = _interopRequireDefault(require("./ChatWindow"));

var _logoNoBg = _interopRequireDefault(require("./../assets/logo-no-bg.svg"));

var _notification = _interopRequireDefault(require("./../assets/sounds/notification.mp3"));

var _closeIcon = _interopRequireDefault(require("./../assets/close-icon.png"));

var _jsxFileName = "/Users/felipemoraes/Developer/react-team-chat-window/src/components/Launcher.js",
    _this2 = void 0;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

var Launcher = /*#__PURE__*/function (_Component) {
  _inheritsLoose(Launcher, _Component);

  var _super = _createSuper(Launcher);

  function Launcher() {
    var _this;

    _this = _Component.call(this) || this;
    _this.state = {
      launcherIcon: _logoNoBg["default"],
      isOpen: false
    };
    return _this;
  }

  var _proto = Launcher.prototype;

  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (this.props.mute) {
      return;
    }

    var nextMessage = nextProps.messageList[nextProps.messageList.length - 1];
    var isIncoming = (nextMessage || {}).author === 'them';
    var isNew = nextProps.messageList.length > this.props.messageList.length;

    if (isIncoming && isNew) {
      this.playIncomingMessageSound();
    }
  };

  _proto.playIncomingMessageSound = function playIncomingMessageSound() {
    var audio = new Audio(_notification["default"]);
    audio.play();
  };

  _proto.handleClick = function handleClick() {
    if (this.props.handleClick !== undefined) {
      this.props.handleClick();
    } else {
      this.setState({
        isOpen: !this.state.isOpen
      });
    }
  };

  _proto.render = function render() {
    var isOpen = this.props.hasOwnProperty('isOpen') ? this.props.isOpen : this.state.isOpen;
    var classList = ['sc-launcher', isOpen ? 'opened' : ''];
    return /*#__PURE__*/_react["default"].createElement("div", {
      id: "sc-launcher",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 49,
        columnNumber: 7
      }
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: classList.join(' '),
      onClick: this.handleClick.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 9
      }
    }, /*#__PURE__*/_react["default"].createElement(MessageCount, {
      count: this.props.newMessagesCount,
      isOpen: isOpen,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 51,
        columnNumber: 11
      }
    }), /*#__PURE__*/_react["default"].createElement("img", {
      className: 'sc-open-icon',
      src: _closeIcon["default"],
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 52,
        columnNumber: 11
      }
    }), /*#__PURE__*/_react["default"].createElement("img", {
      className: 'sc-closed-icon',
      src: _logoNoBg["default"],
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 53,
        columnNumber: 11
      }
    })), /*#__PURE__*/_react["default"].createElement(_ChatWindow["default"], {
      messageList: this.props.messageList,
      onUserInputSubmit: this.props.onMessageWasSent,
      onFilesSelected: this.props.onFilesSelected,
      agentProfile: this.props.agentProfile,
      isOpen: isOpen,
      onClose: this.handleClick.bind(this),
      showEmoji: this.props.showEmoji,
      showFile: this.props.showFile,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 55,
        columnNumber: 9
      }
    }));
  };

  return Launcher;
}(_react.Component);

var MessageCount = function MessageCount(props) {
  if (props.count === 0 || props.isOpen === true) {
    return null;
  }

  return /*#__PURE__*/_react["default"].createElement("div", {
    className: 'sc-new-messages-count',
    __self: _this2,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 5
    }
  }, props.count);
};

Launcher.propTypes = process.env.NODE_ENV !== "production" ? {
  onMessageWasReceived: _propTypes["default"].func,
  onMessageWasSent: _propTypes["default"].func,
  newMessagesCount: _propTypes["default"].number,
  isOpen: _propTypes["default"].bool,
  handleClick: _propTypes["default"].func,
  messageList: _propTypes["default"].arrayOf(_propTypes["default"].object),
  mute: _propTypes["default"].bool,
  showEmoji: _propTypes["default"].bool,
  showFile: _propTypes["default"].bool
} : {};
Launcher.defaultProps = {
  newMessagesCount: 0,
  showEmoji: true,
  showFile: true
};
var _default = Launcher;
exports["default"] = _default;
module.exports = exports.default;